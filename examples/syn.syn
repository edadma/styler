syntax = rule* :rules.

rule = ident "=" pattern "." :rule.

pattern = rep1sep(seq, "|") :alts.

seq = quant* action? :seq.

quant = primary "*" :star | primary "+" :plus | primary "?" :ques | primary.

primary = (`rep1sep`|`repsep`) "(" pattern "," pattern ")" | ident | string | backQuoteString | "(" pattern ")" | "{" pattern "}" :rep |"[" pattern "]" :opt.

action = ":" ident :name | "/" ident :special
       | "->" element :element.

element = "[" repsep(element, ",") "]" :element | ident | string | int | "..." int :spread.